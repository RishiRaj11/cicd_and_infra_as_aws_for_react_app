name: Deploy React App to AWS

on:
  push:
    branches:
      - main  # This will trigger the workflow on every push to the 'main' branch

jobs:
  # Job 1: Infrastructure Deployment (Terraform)
  infrastructure:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.5.4'  # Use the version needed for your project

      - name: Install Terraform dependencies
        run: |
          cd infra  # Change to the directory containing main.tf
          terraform init

      - name: Apply Terraform Infrastructure
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd infra  # Change to the directory containing main.tf
          terraform apply -auto-approve

      # Output the IAM user's credentials (access key and secret key) to use in the next job
      - name: Output IAM user credentials
        id: output-iam-keys
        run: |
          cd infra  # Change to the directory containing main.tf
          echo "AWS_ACCESS_KEY_ID=$(terraform output -raw github_action_access_key_id)" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(terraform output -raw github_action_secret_access_key)" >> $GITHUB_ENV

  # Job 2: Application Deployment (React to S3)
  deploy:
    runs-on: ubuntu-latest
    needs: infrastructure  # Ensure the infrastructure job is completed before this

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js (same version as your React app)
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # Set this to your React app's version (e.g., 16)

      - name: Install dependencies
        run: npm install

      - name: Build the React app
        run: npm run build

      - name: Set up AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1  # Set to the correct AWS region

      - name: Deploy to S3
        run: aws s3 sync build/ s3://my-react-app-unique-name/ --delete
